/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockAToken,
  MockATokenInterface,
} from "../../../contracts/aave/MockAToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "pool_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000c8238038062000c82833981016040819052620000349162000138565b838360036200004483826200026b565b5060046200005382826200026b565b50505060ff90911660a0526001600160a01b031660805250620003379050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009b57600080fd5b81516001600160401b0380821115620000b857620000b862000073565b604051601f8301601f19908116603f01168101908282118183101715620000e357620000e362000073565b816040528381526020925086838588010111156200010057600080fd5b600091505b8382101562000124578582018301518183018401529082019062000105565b600093810190920192909252949350505050565b600080600080608085870312156200014f57600080fd5b84516001600160401b03808211156200016757600080fd5b620001758883890162000089565b955060208701519150808211156200018c57600080fd5b506200019b8782880162000089565b935050604085015160ff81168114620001b357600080fd5b60608601519092506001600160a01b0381168114620001d157600080fd5b939692955090935050565b600181811c90821680620001f157607f821691505b6020821081036200021257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200026657600081815260208120601f850160051c81016020861015620002415750805b601f850160051c820191505b8181101562000262578281556001016200024d565b5050505b505050565b81516001600160401b0381111562000287576200028762000073565b6200029f81620002988454620001dc565b8462000218565b602080601f831160018114620002d75760008415620002be5750858301515b600019600386901b1c1916600185901b17855562000262565b600085815260208120601f198616915b828110156200030857888601518255948401946001909101908401620002e7565b5085821015620003275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516109176200036b60003960006101260152600081816101930152818161030f015261039501526109176000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101655780637535d2461461018e57806395d89b41146101cd5780639dc29fac146101d5578063a9059cbb146101e8578063dd62ed3e146101fb57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806340c10f1914610150575b600080fd5b6100c1610234565b6040516100ce9190610761565b60405180910390f35b6100ea6100e53660046107cb565b6102c6565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046107f5565b6102e0565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ce565b61016361015e3660046107cb565b610304565b005b6100fe610173366004610831565b6001600160a01b031660009081526020819052604090205490565b6101b57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ce565b6100c161037b565b6101636101e33660046107cb565b61038a565b6100ea6101f63660046107cb565b6103f8565b6100fe610209366004610853565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024390610886565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610886565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b6000336102d4818585610406565b60019150505b92915050565b6000336102ee858285610418565b6102f9858585610497565b506001949350505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461036d5760405162461bcd60e51b815260206004820152600960248201526813d3931657d413d3d360ba1b60448201526064015b60405180910390fd5b61037782826104f6565b5050565b60606004805461024390610886565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103ee5760405162461bcd60e51b815260206004820152600960248201526813d3931657d413d3d360ba1b6044820152606401610364565b610377828261052c565b6000336102d4818585610497565b6104138383836001610562565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610491578181101561048257604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610364565b61049184848484036000610562565b50505050565b6001600160a01b0383166104c157604051634b637e8f60e11b815260006004820152602401610364565b6001600160a01b0382166104eb5760405163ec442f0560e01b815260006004820152602401610364565b610413838383610637565b6001600160a01b0382166105205760405163ec442f0560e01b815260006004820152602401610364565b61037760008383610637565b6001600160a01b03821661055657604051634b637e8f60e11b815260006004820152602401610364565b61037782600083610637565b6001600160a01b03841661058c5760405163e602df0560e01b815260006004820152602401610364565b6001600160a01b0383166105b657604051634a1406b160e11b815260006004820152602401610364565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561049157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062991815260200190565b60405180910390a350505050565b6001600160a01b03831661066257806002600082825461065791906108c0565b909155506106d49050565b6001600160a01b038316600090815260208190526040902054818110156106b55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610364565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106f05760028054829003905561070f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161075491815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078e57858101830151858201604001528201610772565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107c657600080fd5b919050565b600080604083850312156107de57600080fd5b6107e7836107af565b946020939093013593505050565b60008060006060848603121561080a57600080fd5b610813846107af565b9250610821602085016107af565b9150604084013590509250925092565b60006020828403121561084357600080fd5b61084c826107af565b9392505050565b6000806040838503121561086657600080fd5b61086f836107af565b915061087d602084016107af565b90509250929050565b600181811c9082168061089a57607f821691505b6020821081036108ba57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102da57634e487b7160e01b600052601160045260246000fdfea264697066735822122054f33459c6e1c71457f177278e9e476d366ebcc5172e974aa1bbcd549310c29a64736f6c63430008140033";

type MockATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAToken__factory extends ContractFactory {
  constructor(...args: MockATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    pool_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      pool_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    pool_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      pool_,
      overrides || {}
    ) as Promise<
      MockAToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAToken__factory {
    return super.connect(runner) as MockAToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockATokenInterface {
    return new Interface(_abi) as MockATokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAToken {
    return new Contract(address, _abi, runner) as unknown as MockAToken;
  }
}
