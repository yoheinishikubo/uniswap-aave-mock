/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Decimals,
  ERC20DecimalsInterface,
} from "../../../contracts/tokens/ERC20Decimals";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b506040516200161438038062001614833981016040819052620000359162000408565b6040805180820190915260018152603160f81b6020820152859081908187600362000061838262000547565b50600462000070828262000547565b5062000082915083905060056200014a565b61012052620000938160066200014a565b61014052815160208084019190912060e052815190820120610100524660a0526200012160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525060ff8316610160526200013f818362000183565b50505050506200068f565b60006020835110156200016a576200016283620001c5565b90506200017d565b8162000177848262000547565b5060ff90505b92915050565b6001600160a01b038216620001b35760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620001c16000838362000208565b5050565b600080829050601f81511115620001f3578260405163305a27a960e01b8152600401620001aa919062000613565b8051620002008262000648565b179392505050565b6001600160a01b038316620002375780600260008282546200022b91906200066d565b90915550620002ab9050565b6001600160a01b038316600090815260208190526040902054818110156200028c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620001aa565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002c957600280548290039055620002e8565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200032e91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200036e57818101518382015260200162000354565b50506000910152565b600082601f8301126200038957600080fd5b81516001600160401b0380821115620003a657620003a66200033b565b604051601f8301601f19908116603f01168101908282118183101715620003d157620003d16200033b565b81604052838152866020858801011115620003eb57600080fd5b620003fe84602083016020890162000351565b9695505050505050565b600080600080600060a086880312156200042157600080fd5b85516001600160401b03808211156200043957600080fd5b6200044789838a0162000377565b965060208801519150808211156200045e57600080fd5b506200046d8882890162000377565b945050604086015160ff811681146200048557600080fd5b6060870151608088015191945092506001600160a01b0381168114620004aa57600080fd5b809150509295509295909350565b600181811c90821680620004cd57607f821691505b602082108103620004ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200054257600081815260208120601f850160051c810160208610156200051d5750805b601f850160051c820191505b818110156200053e5782815560010162000529565b5050505b505050565b81516001600160401b038111156200056357620005636200033b565b6200057b81620005748454620004b8565b84620004f4565b602080601f831160018114620005b357600084156200059a5750858301515b600019600386901b1c1916600185901b1785556200053e565b600085815260208120601f198616915b82811015620005e457888601518255948401946001909101908401620005c3565b5085821015620006035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200063481604085016020870162000351565b601f01601f19169190910160400192915050565b80516020808301519190811015620004ee5760001960209190910360031b1b16919050565b808201808211156200017d57634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610f1f620006f5600039600061014101526000610721015260006106f40152600061069c01526000610674015260006105cf015260006105f9015260006106230152610f1f6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101ca578063a9059cbb146101d2578063d505accf146101e5578063dd62ed3e146101fa57600080fd5b806370a08231146101735780637ecebe001461019c57806384b0196e146101af57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633644e5151461016b575b600080fd5b6100dc610233565b6040516100e99190610c85565b60405180910390f35b610105610100366004610cbb565b6102c5565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610ce5565b6102df565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100e9565b610119610303565b610119610181366004610d21565b6001600160a01b031660009081526020819052604090205490565b6101196101aa366004610d21565b610312565b6101b7610330565b6040516100e99796959493929190610d3c565b6100dc610376565b6101056101e0366004610cbb565b610385565b6101f86101f3366004610dd2565b610393565b005b610119610208366004610e45565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024290610e78565b80601f016020809104026020016040519081016040528092919081815260200182805461026e90610e78565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b5050505050905090565b6000336102d38185856104d2565b60019150505b92915050565b6000336102ed8582856104e4565b6102f8858585610563565b506001949350505050565b600061030d6105c2565b905090565b6001600160a01b0381166000908152600760205260408120546102d9565b6000606080600080600060606103446106ed565b61034c61071a565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461024290610e78565b6000336102d3818585610563565b834211156103bc5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104098c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061046482610747565b9050600061047482878787610774565b9050896001600160a01b0316816001600160a01b0316146104bb576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016103b3565b6104c68a8a8a6104d2565b50505050505050505050565b6104df83838360016107a2565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561055d578181101561054e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103b3565b61055d848484840360006107a2565b50505050565b6001600160a01b03831661058d57604051634b637e8f60e11b8152600060048201526024016103b3565b6001600160a01b0382166105b75760405163ec442f0560e01b8152600060048201526024016103b3565b6104df838383610877565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561061b57507f000000000000000000000000000000000000000000000000000000000000000046145b1561064557507f000000000000000000000000000000000000000000000000000000000000000090565b61030d604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b606061030d7f000000000000000000000000000000000000000000000000000000000000000060056109a1565b606061030d7f000000000000000000000000000000000000000000000000000000000000000060066109a1565b60006102d96107546105c2565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061078688888888610a4c565b9250925092506107968282610b1b565b50909695505050505050565b6001600160a01b0384166107cc5760405163e602df0560e01b8152600060048201526024016103b3565b6001600160a01b0383166107f657604051634a1406b160e11b8152600060048201526024016103b3565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561055d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161086991815260200190565b60405180910390a350505050565b6001600160a01b0383166108a25780600260008282546108979190610eb2565b909155506109149050565b6001600160a01b038316600090815260208190526040902054818110156108f55760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103b3565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166109305760028054829003905561094f565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161099491815260200190565b60405180910390a3505050565b606060ff83146109bb576109b483610bd8565b90506102d9565b8180546109c790610e78565b80601f01602080910402602001604051908101604052809291908181526020018280546109f390610e78565b8015610a405780601f10610a1557610100808354040283529160200191610a40565b820191906000526020600020905b815481529060010190602001808311610a2357829003601f168201915b505050505090506102d9565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610a875750600091506003905082610b11565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610adb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b0757506000925060019150829050610b11565b9250600091508190505b9450945094915050565b6000826003811115610b2f57610b2f610ed3565b03610b38575050565b6001826003811115610b4c57610b4c610ed3565b03610b6a5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b7e57610b7e610ed3565b03610b9f5760405163fce698f760e01b8152600481018290526024016103b3565b6003826003811115610bb357610bb3610ed3565b03610bd4576040516335e2f38360e21b8152600481018290526024016103b3565b5050565b60606000610be583610c17565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f8111156102d957604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610c6557602081850181015186830182015201610c49565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c986020830184610c3f565b9392505050565b80356001600160a01b0381168114610cb657600080fd5b919050565b60008060408385031215610cce57600080fd5b610cd783610c9f565b946020939093013593505050565b600080600060608486031215610cfa57600080fd5b610d0384610c9f565b9250610d1160208501610c9f565b9150604084013590509250925092565b600060208284031215610d3357600080fd5b610c9882610c9f565b60ff60f81b881681526000602060e081840152610d5c60e084018a610c3f565b8381036040850152610d6e818a610c3f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610dc057835183529284019291840191600101610da4565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610ded57600080fd5b610df688610c9f565b9650610e0460208901610c9f565b95506040880135945060608801359350608088013560ff81168114610e2857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610e5857600080fd5b610e6183610c9f565b9150610e6f60208401610c9f565b90509250929050565b600181811c90821680610e8c57607f821691505b602082108103610eac57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102d957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122075445ca1d80e1edc61cd1066c953dc7241df1783a8f53a862d990c3df4ef447364736f6c63430008140033";

type ERC20DecimalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20DecimalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Decimals__factory extends ContractFactory {
  constructor(...args: ERC20DecimalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply,
      to,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply,
      to,
      overrides || {}
    ) as Promise<
      ERC20Decimals & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Decimals__factory {
    return super.connect(runner) as ERC20Decimals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20DecimalsInterface {
    return new Interface(_abi) as ERC20DecimalsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Decimals {
    return new Contract(address, _abi, runner) as unknown as ERC20Decimals;
  }
}
